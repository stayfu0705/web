import pandas as pd
import pickle
import numpy as np
import warnings
import mysql.connector as sql
warnings.filterwarnings('ignore')

# 算出類別平均在排名, 計算方法可以看calculate.py
ITEM = {'70003': 0, '70004': 2, '70023': 6, '70027': 4, '70028': 3, '70113': 1, '70114': 5}

ORDERDR = {'176': 229, '2646': 141, '2658': 268, '276': 16, '3568': 1, '3672': 379, '3683': 481, '3696': 232,
           '3707': 159, '3727': 189, '3728': 69, '3732': 3, '3735': 4, '3749': 34, '3753': 532, '3759': 54, '376': 66,
           '3764': 78, '3773': 546, '3808': 526, '3821': 189, '3842': 469, '3855': 557, '3868': 126, '3880': 62,
           '3890': 268, '3891': 31, '3906': 19, '3909': 268, '3922': 29, '3923': 7, '4001': 78, '4004': 375,
           '4006': 175, '4007': 208, '4009': 216, '4012': 208, '4013': 363, '4014': 14, '4015': 541, '4016': 219,
           '4017': 486, '4018': 12, '4020': 501, '4021': 263, '4022': 47, '4028': 100, '4030': 523, '4033': 178,
           '4034': 433, '4035': 445, '4037': 165, '4039': 431, '4041': 352, '4043': 189, '4044': 348, '4045': 481,
           '4049': 384, '4051': 298, '4053': 308, '4058': 198, '4063': 409, '4064': 366, '4065': 225, '4067': 492,
           '4069': 232, '4071': 290, '4072': 296, '4077': 281, '4079': 52, '4080': 415, '4087': 183, '4089': 516,
           '4090': 499, '4091': 412, '4093': 224, '4095': 331, '4099': 283, '4102': 262, '4103': 172, '4104': 220,
           '4105': 350, '4106': 180, '4107': 217, '4108': 304, '4109': 94, '4118': 221, '4122': 268, '4128': 335,
           '4129': 349, '4131': 208, '4132': 51, '4135': 69, '4136': 239, '4137': 492, '4138': 518, '4139': 291,
           '4140': 119, '4141': 418, '4144': 510, '4145': 27, '4158': 228, '4159': 320, '4165': 268, '4173': 254,
           '4175': 452, '4176': 434, '4178': 222, '4179': 282, '4181': 378, '4182': 315, '4185': 106, '4189': 276,
           '4190': 318, '4191': 328, '4192': 323, '4196': 284, '4199': 32, '4235': 170, '4238': 390, '4239': 331,
           '4242': 189, '4243': 256, '4246': 455, '4251': 523, '4252': 322, '4253': 353, '4254': 130, '4256': 503,
           '4259': 42, '4263': 92, '4268': 514, '4270': 478, '4272': 469, '4273': 208, '4276': 544, '4277': 78,
           '4278': 280, '4279': 481, '4280': 122, '4282': 114, '4283': 184, '4286': 438, '4287': 19, '4289': 355,
           '4290': 25, '4291': 19, '4294': 488, '4298': 232, '4299': 384, '4304': 247, '4305': 532, '4306': 249,
           '4307': 437, '4308': 130, '4310': 331, '4312': 444, '4316': 145, '4318': 173, '4320': 442, '4322': 343,
           '4323': 364, '4325': 510, '4329': 440, '4330': 475, '4331': 550, '4332': 464, '4334': 186, '4337': 439,
           '4338': 279, '4339': 497, '4340': 368, '4341': 91, '4349': 368, '4350': 302, '4351': 82, '4354': 156,
           '4355': 137, '4356': 218, '4357': 519, '4358': 275, '4362': 34, '4363': 175, '4367': 104, '4368': 113,
           '4370': 277, '4373': 425, '4374': 520, '4375': 474, '4378': 497, '4379': 133, '4382': 462, '4385': 553,
           '4387': 413, '4389': 252, '4391': 430, '4397': 469, '4398': 54, '4401': 436, '4403': 252, '4408': 360,
           '4412': 418, '4415': 449, '4416': 550, '4417': 418, '4418': 432, '4421': 12, '4428': 418, '4429': 418,
           '4434': 483, '4438': 126, '4440': 469, '4441': 340, '4442': 476, '4443': 62, '4455': 16, '4464': 56,
           '4471': 395, '4501': 414, '4502': 469, '4503': 490, '4505': 552, '4506': 340, '4507': 236, '4515': 289,
           '4516': 506, '4519': 162, '4522': 391, '4524': 389, '4526': 527, '4529': 394, '4531': 442, '4534': 440,
           '4535': 354, '4539': 535, '4544': 554, '4546': 457, '4547': 451, '4548': 372, '4556': 425, '4558': 197,
           '4560': 410, '4561': 382, '4565': 469, '4566': 69, '4567': 418, '4578': 0, '4580': 336, '4583': 208,
           '4597': 232, '4600': 423, '4606': 338, '4607': 337, '4608': 362, '4611': 429, '4614': 424, '4616': 304,
           '4619': 396, '4628': 380, '4632': 327, '4633': 214, '4639': 359, '4640': 453, '4651': 241, '4667': 515,
           '4669': 540, '4675': 459, '4676': 376, '4689': 316, '4691': 223, '4696': 384, '4700': 555, '4705': 256,
           '4708': 293, '4711': 523, '4713': 347, '4714': 321, '4715': 208, '4719': 517, '4721': 548, '4723': 399,
           '4730': 368, '4764': 387, '4769': 504, '4782': 537, '4784': 14, '4785': 126, '4792': 10, '4796': 22,
           '4799': 93, '4821': 74, '4823': 69, '4825': 447, '4826': 132, '4828': 299, '4832': 84, '4834': 136,
           '4846': 399, '4857': 252, '4865': 456, '4868': 39, '4869': 151, '4874': 208, '4883': 166, '4909': 307,
           '4911': 120, '4927': 461, '4936': 96, '4954': 105, '4965': 135, '4967': 459, '4969': 312, '4977': 312,
           '4979': 504, '4982': 454, '4987': 557, '5027': 372, '5035': 529, '5041': 36, '5044': 319, '5050': 175,
           '5068': 532, '5077': 306, '5082': 250, '5105': 73, '5106': 57, '5107': 208, '5112': 301, '5114': 64,
           '5117': 469, '5120': 245, '5135': 406, '5141': 193, '5147': 309, '5185': 459, '5188': 492, '5203': 215,
           '5204': 89, '5211': 147, '5213': 115, '5218': 159, '5219': 268, '5222': 123, '5228': 117, '5244': 556,
           '5253': 124, '5255': 144, '5263': 107, '5272': 169, '5279': 331, '5306': 54, '5307': 549, '5314': 189,
           '5332': 5, '5342': 175, '5344': 167, '5350': 542, '5352': 258, '5362': 39, '5364': 200, '5366': 268,
           '5400': 196, '5403': 97, '5406': 109, '5408': 39, '5410': 110, '5416': 164, '5417': 43, '5421': 139,
           '5434': 118, '5435': 502, '5508': 331, '5628': 112, '5634': 469, '5636': 60, '5639': 141, '5640': 58,
           '5641': 8, '5684': 39, '5686': 102, '5687': 59, '5689': 98, '5695': 403, '5701': 225, '5702': 268,
           '5703': 404, '5705': 449, '5706': 492, '5707': 446, '5711': 489, '5715': 374, '5718': 427, '5719': 495,
           '5721': 485, '5729': 510, '5740': 141, '5741': 34, '5757': 356, '5770': 182, '5773': 94, '5797': 365,
           '5806': 232, '5808': 476, '5811': 29, '5814': 162, '5816': 208, '5817': 537, '5818': 532, '5819': 148,
           '5821': 496, '5824': 324, '5826': 102, '5828': 357, '5831': 386, '5832': 402, '5834': 293, '5837': 12,
           '5838': 393, '5839': 287, '5844': 75, '5845': 208, '5846': 8, '5847': 168, '5848': 69, '5849': 244,
           '5850': 78, '5851': 241, '5852': 195, '5853': 278, '5854': 87, '5856': 331, '5858': 241, '5859': 126,
           '5860': 170, '5862': 121, '5864': 200, '5865': 152, '5867': 179, '5874': 479, '5875': 134, '5876': 78,
           '5877': 47, '5879': 23, '5882': 238, '5883': 537, '5885': 50, '5886': 146, '5888': 194, '5890': 208,
           '5891': 90, '5892': 47, '5893': 325, '5894': 260, '5895': 407, '5896': 345, '5898': 255, '5899': 111,
           '5903': 529, '5904': 428, '5905': 274, '5922': 202, '5923': 47, '5924': 1, '5926': 268, '5927': 19,
           '5928': 236, '5936': 62, '5945': 25, '5946': 388, '5948': 232, '5949': 537, '5951': 542, '5953': 261,
           '5955': 350, '5957': 69, '5960': 405, '5966': 310, '5968': 297, '5969': 317, '5970': 299, '5975': 241,
           '5977': 293, '5979': 326, '5981': 285, '5984': 99, '5985': 358, '5986': 39, '5992': 449, '5994': 29,
           '5999': 399, '6003': 102, '6004': 65, '6021': 159, '6025': 129, '6061': 181, '6063': 153, '6067': 44,
           '6070': 6, '6225': 340, '6229': 371, '6231': 259, '6253': 248, '6257': 381, '6258': 344, '6262': 434,
           '6272': 377, '6277': 47, '6279': 150, '6285': 138, '6286': 422, '6308': 199, '6325': 185, '6329': 392,
           '6333': 408, '6344': 483, '6357': 246, '6368': 288, '6370': 157, '6379': 303, '6410': 411, '6422': 227,
           '6428': 154, '6431': 469, '6454': 108, '6471': 286, '6472': 508, '6473': 149, '6481': 342, '6488': 346,
           '6600': 143, '6740': 513, '6741': 506, '6746': 189, '6754': 360, '6756': 500, '6758': 523, '6760': 159,
           '6876': 25, '6933': 529, '6939': 486, '6954': 312, '9207': 545, '9211': 83, '9223': 293, '9294': 463,
           '9302': 312, '9307': 521, '9316': 116, '9341': 547, '9351': 368, '9363': 85, '9385': 88, '9409': 268,
           '9427': 78, '9429': 510, '9451': 399, '9454': 86, '9466': 399, '9486': 155}

PLACE = {'1.5T': 0, '3T': 1, 'ROOM18': 3, 'nan': 2}

IO = {'E': 0, 'I': 2, 'O': 1}

DEPT = {'1': 5, '12': 25, '13': 23, '14': 19, '15': 16, '16': 8, '18': 26, '19': 24, '1G': 22, '20': 18, '21': 15,
        '24': 6, '26': 17, '28': 1, '29': 36, '30': 30, '40': 34, '41': 10, '50': 11, '51': 38, '52': 4, '53': 3,
        '54': 37, '55': 32, '56': 27, '57': 33, '67': 20, '68': 14, '69': 0, '70': 28, '71': 29, '72': 31, '73': 2,
        '74': 35, '75': 13, '76': 9, '80': 12, '86': 7, '92': 21}

SEX = {'F': 1, 'M': 0}

POS = {'1': 12, '10': 14, '12': 45, '13': 39, '14': 31, '15': 51, '17': 57, '18': 28, '19': 10, '2': 11, '20': 55,
       '21': 29, '22': 56, '24': 58, '25': 5, '26': 16, '3': 22, '31': 30, '32': 2, '33': 23, '34': 0, '38': 24,
       '39': 48, '4': 18, '41': 21, '42': 17, '43': 25, '44': 44, '45': 32, '46': 52, '47': 26, '48': 43, '49': 9,
       '5': 47, '50': 15, '51': 49, '52': 7, '55': 37, '56': 34, '6': 42, '60': 33, '61': 8, '62': 27, '63': 1,
       '64': 35, '65': 3, '66': 19, '67': 41, '7': 40, '71': 6, '72': 38, '73': 13, '74': 46, '76': 54, '77': 4,
       '78': 20, '8': 53, '9': 36, '9999': 50}

# '37753240',
data = ['70003', '6379', '3T', 'O', '13', 'F', 64, '42']

def meaning(data):

    x = ["ITEM", "ORDERDR", "PLACE", "IO", "DEPT", "SEX", "AGE", "POS"]
    df = pd.DataFrame({x[i]: [data[i]] for i in range(len(x))})

    select = ["ITEM", "ORDERDR",
              "PLACE", "IO", "DEPT",
              "SEX", "POS"]
    for c in select:
        df[c] = df[c].astype(str)
        df[c] = df[c].apply(lambda x: eval("%s[x]" % c))


    df = df[x].values.tolist()[0]
    a = str(df).replace('[', '').replace(']', '')
    return a



# df[0] = int(df[0])
# a = str(df).replace('[','["').replace(']', '"]')



def predict(df):
    X_test = np.matrix(df)

    gbm = pickle.load(open("pima.pickle.dat", "rb"))
    #preditions為其結果
    predictions = gbm.predict(X_test)
    print(predictions)
    return predictions[0]



#--- database loading data---#
def get_data(data_select,columns_select):
    # create connect
    mydb = sql.connect(host='10.120.14.110', database='DB102', user='root', password='Qqqq@123')
    db_cursor = mydb.cursor(buffered=True)

    #get record
    db_cursor.execute(data_select)
    resoult = db_cursor.fetchall()

    # get columns_name
    db_cursor.execute(columns_select)
    columns_name = [column[0] for column in db_cursor.fetchall()]

    # turn to dataframe
    ctdata = pd.DataFrame(resoult,columns=columns_name)

    # close connect
    mydb.close()

    df = pd.DataFrame(ctdata)

    return df